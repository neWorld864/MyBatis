<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
<!-- 
	- The content of element type "configuration" must match 
	 "(properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,objectWrapperFactory?,
	 reflectorFactory?,plugins?,environments?,databaseIdProvider?,mappers?)".

	<properties resource="/driver.properties"/>를 맨 위로 올려줌
-->
	<properties resource="/driver.properties"/>

	<typeAliases>
		<typeAlias type="member.model.vo.Member" alias="Member"/>
		<typeAlias type="board.model.vo.Board" alias="Board"/>
	</typeAliases>
	
	
	<!-- 위에 DOCTYPE ~ 이게 있어야 ctrl+space했을 때 configuration이 자동완성으로 뜸 -->
	<!-- DB에 연결할 설정에 대한 정보 선언 -->
	<environments default="development"><!-- 연결 설정을 여러 개 생성했을 때, 기본으로 연결할 설정 정보를 설정하는 속성 -->
		<!-- Database에 연결할 설정 정보 선언 -->
		<!-- environments : environment가 여러개 있다는 뜻이므로 여러개 만들어야  빨간 줄이 안 뜸 -->
		
		<environment id="development"><!-- 연결 설정을 여러 개 생성했을 때, 기본으로 연결할 설정 정보를 설정하는 속성 -->
			<!-- 트랜잭션을 누가 관리할 것인가에 대한 설정 -->
			<transactionManager type="JDBC"/>
			<!--  
				JDBC		: JDBC가 커밋/롤백 직접 처리(수동)
				MANAGED		: 트랜젝션에 대해 직접적인 영향 행사x(자동)
			-->
		
			<!-- 실제 DB접속에 관한 정보들을 넣는 태그, type속성은 ConnectionPool을 사용할것인지에 대한 여부 -->
			<dataSource type="POOLED">
				<!--  
					(Web Application에서 많이 쓰는 방식)
					POOLED		: 커넥션 객체를 미리 만들어 놓고 관리해서 객체를 만드는데 시간이 적게 듦
								   사용자의 요청이 있을 때 DB에 연결하여 명령을 실행하고 명령이 종료 되어도 pool에 저장하여 요청이 올 때마다 pool에서 커넥션을 꺼내 재사용
					UNPOOLED	: DB관련 요청이 올 때마다 커넥션 객체를 계속 만들어줌, 미리 커넥션 객체를 만들어놓는 방식이 아니므로 조금 느릴 수 있음
					JNDI		: 컨테이너(ejb)가 따로 데이터 소스를 관리하는 경우
				-->
				
				<!-- 연결에 필요한 정보들은 property태그로 등록 -->
				<property name="driver" value="${driver}"/>
				<property name="url" value="${url}"/>
				<property name="username" value="${username}"/>
				<property name="password" value="${password}"/>
				<!-- el은 view에서만 사용 가능 -->
				
			</dataSource>
		</environment>
	</environments>
	
	<!-- mapper파일 등록 -->
	<!-- DB의 컬럼값과 Member의 변수명이 같지 않은 것들은  null로 나옴-->
	<mappers>
		<mapper resource="/mappers/member-mapper.xml"/>
		<mapper resource="mappers/board-mapper.xml"/>
	</mappers>
	
	
</configuration>
