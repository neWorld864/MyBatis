<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- window - preferences -  XML - xml catalog - add -->
<mapper namespace="boardMapper">
<!-- config에 mapper 등록하기! -->

	<!-- resultMap : DB의 컬럼명과 필드명이 동일하지 않을 때 ==> 여기선 쓸 필요가 없음 -->
	<select id="selectListCount" resultType="_int">
		select count(*)
		from board
		where b_status='Y'
	</select>
	
	<select id="selectBoardList" resultMap="boardResultSet">
		select bid, btype, btitle, bcontent, bwriter, nickname, bcount, 
				b_create_date, b_modify_date, b_status
		from board
		    join member on(bwriter = user_id)
		where b_status='Y'
		order by bid desc
	</select>
	<resultMap type="Board" id="boardResultSet"> 
		<id property="bId" column="BID"/>
		<result property="bType" column="BTYPE"/>
		<result property="bTitle" column="BTITLE"/>
		<result property="bContent" column="BCONTENT"/>
		<result property="bWriter" column="BWRITER"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="bCount" column="BCOUNT"/>
		<result property="bCreateDate" column="B_CREATE_DATE"/>
		<result property="bModifyDate" column="B_MODIFY_DATE"/>
		<result property="bStatus" column="B_STATUS"/>
	</resultMap> 
	
	<update id="updateCount" parameterType="_int">
		update board
		set bcount = bcount + 1
		where bId = #{bId}
	</update>
	
	<select id="selectBoardDetail" parameterType="_int" resultMap="boardResultSet2">
		select bid, btype, btitle, bcontent, bwriter, m1.nickname b_nickname, 
		        bcount, b_create_date, b_modify_date, b_status,
		     rid, rcontent, ref_bid, rwriter, m2.nickname r_nickname, r_create_date, 
		     r_modify_date, r_status
		from board
			join member m1 on(bwriter = m1.user_id)
		    left join reply on (ref_bid = bid)
		    left join member m2 on(rwriter = m2.user_id)
		WHERE b_status='Y' and bId = ${bId}
		order by rid desc
	</select>
	<!-- 반드시 left join을 해야 결과값이 제대로 나온다 -->
	
	<resultMap type="Board" id="boardResultSet2"> 
		<id property="bId" column="BID"/>
		<result property="bType" column="BTYPE"/>
		<result property="bTitle" column="BTITLE"/>
		<result property="bContent" column="BCONTENT"/>
		<result property="bWriter" column="BWRITER"/>
		<result property="nickName" column="B_NICKNAME"/>
		<result property="bCount" column="BCOUNT"/>
		<result property="bCreateDate" column="B_CREATE_DATE"/>
		<result property="bModifyDate" column="B_MODIFY_DATE"/>
		<result property="bStatus" column="B_STATUS"/>
		
		<!-- <collection property="replyList" javaType="java.util.ArrayList"></collection> -->
		<collection property="replyList" javaType="arraylist" resultMap="replyResultSet"></collection>
	</resultMap> 
	<resultMap type="board.model.vo.Reply" id="replyResultSet">
		<id property="rId" column="RID"/>
		<result property="rContent" column="RCONTENT"/>
		<result property="refBid" column="REF_BID"/>
		<result property="rWriter" column="RWRITER"/>
		<result property="nickName" column="R_NICKNAME"/>
		<result property="rCreateDate" column="R_CREATE_DATE"/>
		<result property="rModifyDate" column="R_MODIFY_DATE"/>
		<result property="rStatus" column="R_STATUS"/>
	</resultMap>
	
	<select id="selectSearchResultListCount" parameterType="board.model.vo.SearchCondition" resultType="_int">
		select count(*)
		from board
			join member on (bwriter = user_id)
		where b_status='Y'
		<if test="writer != null">
			and nickname=#{writer}
		</if>
		<if test="content != null">
			and bcontent like '%' || #{content} || '%'
		</if>
		<if test="title != null">
			and btitle like '%' || #{title} || '%'
		</if>
	</select>
	
	
	<select id="selectSearchResultList" parameterType="board.model.vo.SearchCondition" resultMap="boardResultSet">
		select *
		from board
			 join member on(bwriter = user_id)
		where b_status = 'Y'
		<choose>
			<when test="writer != null">
				and nickname = #{writer}
			</when>
			<when test="title != null">
				and btitle like '%' || #{title} || '%'
			</when>
			<otherwise>
				and bcontent like '%' || #{content} || '%'
			</otherwise>
		</choose>
		order by bid desc
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>